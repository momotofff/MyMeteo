openapi: 3.0.0
info:
  title: MyMeteo
  description: Service for receiving data from the sensor on the OpenAPI 3.0 specification.й.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0

servers:
  - url: http://localhost:9000/api/v1
    description: Dev server

paths:
  /users:
    post:
      operationId: usersRegisterPost
      summary: Регистрация нового пользователя
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: Успешная регистрация пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Ошибка при регистрации пользователя
          content:
            application/json:
              schema:
                type: string
                example: "Username is already taken."

  /sensors:
    post:
      operationId: sensorsPost
      summary: Регистрация нового сенсора
      tags:
        - Sensor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sensor'
      responses:
        '201':
          description: Успешная регистрация сенсора
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sensor'

    get:
      operationId: sensorsGet
      summary: Получение всех сенсоров
      tags:
        - Sensor
      responses:
        '200':
          description: Список всех сенсоров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sensor'

  /measurements/rainyDaysCount:
    get:
      operationId: measurementsRainyDaysCountGet
      summary: Подсчет количества дождливых дней
      tags:
        - Measurement
      responses:
        '200':
          description: Количество дождливых дней
          content:
            application/json:
              schema:
                type: integer
                format: int32
                description: "Количество дней с осадками"

  /measurements:
    post:
      operationId: measurementsPost
      summary: Добавление нового измерения
      tags:
        - Measurement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Measurement'
      responses:
        '201':
          description: Успешное добавление измерения
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Measurement'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: "Идентификатор пользователя"
        username:
          type: string
          description: "Имя пользователя"
          example: "admin"
        email:
          type: string
          description: "Электронная почта пользователя"
          example: "user@example.com"
        password:
          type: string
          description: "Пароль пользователя"
          example: "password123"

    CreateUserRequest:
      type: object
      properties:
        username:
          type: string
          example: "username"
        email:
          type: string
          example: "user@example.com"
      required:
        - username
        - email

    Sensor:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "Уникальный идентификатор сенсора"
        name:
          type: string
          description: "Имя сенсора"
      required:
        - name

    Measurement:
      type: object
      properties:
        value:
          type: number
          format: float
          description: "Значение измерения"
        raining:
          type: boolean
          description: "Флаг, указывающий на наличие осадков"
        sensor:
          $ref: '#/components/schemas/Sensor'
      required:
        - value
        - raining
        - sensor